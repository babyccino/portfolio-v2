---

---

<canvas id="three" class="fixed inset-0 overflow-hidden"> </canvas>

<script>
  import BlockWave from "../lib/block-wave"

  const prefersReducedMotion = window.matchMedia("(prefers-reduced-motion: reduce)").matches
  if (!prefersReducedMotion) {
    const canvas = document.getElementById("three") as HTMLCanvasElement
    const fun = new BlockWave(canvas)
    fun.animate()
    document.addEventListener(
      "astro:page-load",
      () => {
        // This only runs once. hack to get around astro view transition bugs with classes
        const canvas = document.getElementById("three") as HTMLCanvasElement
        canvas.classList.add("fade-in")
        setTimeout(() => {
          canvas.classList.remove("fade-in")
        }, 4000)
      },
      { once: true },
    )

    const form = document.getElementById("colours") as HTMLFormElement
    const darkBg = document.getElementById("dark-bg") as HTMLInputElement
    const darkNoise = document.getElementById("dark-noise") as HTMLInputElement
    const lightBg = document.getElementById("light-bg") as HTMLInputElement
    const lightNoise = document.getElementById("light-noise") as HTMLInputElement
    form.onchange = () => {
      fun.setColours({
        dark: {
          bg: darkBg.value,
          noise: darkNoise.value,
        },
        light: {
          bg: lightBg.value,
          noise: lightNoise.value,
        },
      })
    }
  }
</script>

<script is:inline>
  const canvas = document.getElementById("three")
  canvas.classList.add("fade-in")
</script>

<style lang="scss">
  .fade-in {
    opacity: 0;
    animation: fade-in 2s ease-in-out 2s forwards;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
</style>
