---
import { ViewTransitions } from "astro:transitions"

import "../styles/sharedAnimations.scss"

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html
  transition:name="body"
  transition:animate="none"
  transition:persist
  class="w-full justify-center md:flex md:flex-row"
  lang="en"
>
  <head>
    <script is:inline>
      if (
        localStorage.getItem("color-theme") === "dark" ||
        (!("color-theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark")
      } else {
        document.documentElement.classList.remove("dark")
      }
    </script>
    <meta charset="UTF-8" />
    <meta name="description" content="Gus's portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body
    class="flex w-full flex-row justify-center transition-none dark:bg-gray-950 dark:text-gray-50"
  >
    <slot />
    <style is:global lang="scss">
      html {
        font-family: nimbus-sans, "helvetica neue", system-ui, sans-serif;
        padding-left: calc(100vw - 100%);
      }
      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }

      ::-webkit-scrollbar {
        width: 8px;
      }
      ::-webkit-scrollbar-thumb {
        background: #555;
        border-radius: 20px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background: #444;
      }
    </style>
    <script>
      import { getDarkMode } from "../lib/dark"

      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      const setDarkMode = () =>
        getDarkMode()
          ? document.documentElement.classList.add("dark")
          : document.documentElement.classList.remove("dark")
      setDarkMode()
      document.addEventListener("astro:after-swap", () => {
        setDarkMode()
      })
    </script>
  </body>
</html>
