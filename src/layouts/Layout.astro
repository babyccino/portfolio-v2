---
import DarkMode from "../components/DarkMode.astro"
import Link from "../components/Link.astro"
import Three from "../components/Three.astro"

import BaseLayout from "./BaseLayout.astro"

interface Props {
  title: string
}

const { title } = Astro.props
---

<BaseLayout title={title}>
  <div class="relative flex min-h-screen w-full max-w-5xl flex-col justify-between md:flex-row">
    <header
      transition:name="nav"
      transition:persist
      transition:animate="none"
      class="relative top-0 z-10 w-full p-8 pb-4 pl-12 pt-12 md:fixed md:top-1/2 md:w-80 md:-translate-y-1/2 md:pb-14 md:pt-0"
      id="nav"
    >
      <div class="relative cursor-default text-5xl font-light dark:text-gray-200">Gus Ryan</div>
      <h2 class="mt-4 cursor-default text-2xl font-light dark:text-gray-100">Web Developer</h2>
      <nav
        class="fixed left-8 top-1/2 z-10 -translate-y-1/2 md:static md:mt-16 md:transform-none dark:text-gray-300"
      >
        <ul class="space-y-8 text-lg text-gray-900 dark:text-gray-200">
          <li class="writing-vertical">
            <Link content="About" href="/about" />
          </li>
          <li class="writing-vertical">
            <Link content="Experience" href="/experience" />
          </li>
          <li class="writing-vertical">
            <Link content="Projects" href="/projects" />
          </li>
          <li class="writing-vertical">
            <Link content="Blog" href="/blog" />
          </li>
        </ul>
      </nav>
    </header>
    <div>
      <div class="md:w-80"></div>
    </div>
    <div class="relative flex-grow overflow-hidden">
      <div id="main-container" class="h-full">
        <slot />
      </div>
    </div>
  </div>
  <div class="z-10 dark:bg-gray-950" transition:name="dark-mode-toggle" transition:persist>
    <DarkMode />
  </div>
  <div
    transition:name="three-canvas"
    transition:persist
    transition:animate="none"
    class="fixed inset-0 -z-20"
  >
    <Three />
  </div>
</BaseLayout>

<script>
  const glitchClassList = ["!absolute", "top-0", "hue-rotate-90", "-z-10", "saturate-[3]"]

  function glitchElement(id: string) {
    const element = document.getElementById(id) as HTMLDivElement
    setTimeout(() => {
      element.classList.remove("opacity-0")
    }, 300)

    element.before(element.cloneNode(true))
    const terminalClone = element.previousSibling as HTMLDivElement
    terminalClone.classList.add(...glitchClassList, "glitch-1")
    terminalClone.id = "terminal-clone-1"

    element.before(element.cloneNode(true))
    const terminalClone2 = element.previousSibling as HTMLDivElement
    terminalClone2.classList.add(...glitchClassList, "glitch-2")
    terminalClone2.id = "terminal-clone-2"

    setTimeout(() => {
      terminalClone.remove()
      terminalClone2.remove()
    }, 3000)
    document.addEventListener("astro:before-preparation", () => {
      terminalClone.remove()
      terminalClone2.remove()
    })
  }

  setTimeout(() => glitchElement("nav"), 200)
  document.addEventListener("astro:page-load", () => {
    setTimeout(() => glitchElement("main-container"), 200)
  })
</script>

<style is:global>
  html {
    font-family: nimbus-sans, "helvetica neue", system-ui, sans-serif;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>

<style lang="scss">
  .glitch-animation {
    animation: inNOut 2s linear 0s 2 normal none;
  }
  @keyframes inNOut {
    0% {
      opacity: 0%;
      left: -0.35rem;
    }
    45% {
      opacity: 0%;
    }
    46% {
      opacity: 50%;
    }
    49% {
      opacity: 50%;
    }
    50% {
      opacity: 0%;
      left: -0.35rem;
    }
    91% {
      opacity: 0%;
      left: -0.75rem;
    }
    92% {
      opacity: 50%;
      left: -0.75rem;
    }
    95% {
      left: -0.35rem;
    }
    100% {
      opacity: 50%;
      left: -0.35rem;
    }
  }

  .glitch-animation-2 {
    animation: glitch2 2s linear 1s 1 normal none;
  }
  @keyframes glitch2 {
    0% {
      opacity: 0;
    }
    43% {
      opacity: 0;
    }
    44% {
      opacity: 1;
    }
    49% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
    91% {
      opacity: 0;
    }
    92% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }

  .glitch-animation-3 {
    animation: glitch3 2s linear 1s 1 normal none;
  }
  @keyframes glitch3 {
    0% {
      opacity: 0;
    }
    93% {
      opacity: 0;
    }
    94% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }

  @media (max-width: 768px) {
    .writing-vertical {
      writing-mode: vertical-rl;
      text-orientation: mixed;
    }
  }

  $baseAnimationLength: 8s;
  $iterationCount: 0.3;

  $movementTranslateBase: 0.5%;
  @keyframes movementTranslate {
    0% {
      translate: 0 (-4 * $movementTranslateBase);
    }

    15% {
      translate: (2 * $movementTranslateBase) (2 * $movementTranslateBase);
    }

    60% {
      translate: $movementTranslateBase (-2 * $movementTranslateBase);
    }

    75% {
      translate: (-1 * $movementTranslateBase) (4 * $movementTranslateBase);
    }

    100% {
      translate: (2 * $movementTranslateBase) $movementTranslateBase;
    }
  }

  .glitch-1 {
    animation:
      paths (calc(1 / 2) * $baseAnimationLength) step-end (2 * $iterationCount) normal forwards,
      opacity (calc(1 / 2) * $baseAnimationLength) step-end (2 * $iterationCount) normal forwards,
      movementTranslate $baseAnimationLength step-end $iterationCount normal forwards;
  }

  .glitch-2 {
    animation:
      paths (calc(1 / 2) * $baseAnimationLength) step-end (2 * $iterationCount) normal forwards,
      opacity (calc(1 / 2) * $baseAnimationLength) step-end (2 * $iterationCount) normal forwards,
      movementTranslate (calc(4 / 5) * $baseAnimationLength) step-end
        (calc(5 / 4) * $iterationCount) normal forwards;
  }
</style>
